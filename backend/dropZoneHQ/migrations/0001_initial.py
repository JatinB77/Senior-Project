# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-12-01 04:02
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllCanopies',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=45)),
                ('serial_number', models.CharField(max_length=45)),
                ('is_rentable', models.BooleanField(max_length=4)),
                ('manufacturer', models.CharField(max_length=45)),
                ('brand', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=45)),
                ('date_of_manufacture', models.DateTimeField()),
                ('size', models.CharField(max_length=45)),
                ('last_repack_date', models.DateTimeField()),
                ('next_repack_date', models.DateTimeField()),
                ('jump_count', models.IntegerField()),
                ('ride_count', models.IntegerField()),
            ],
            options={
                'db_table': 'all_canopies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AllItems',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_type', models.CharField(max_length=45)),
                ('rig_number', models.IntegerField()),
                ('aad', models.IntegerField()),
                ('container', models.IntegerField()),
                ('isTandem', models.CharField(max_length=45)),
                ('canopy_on_rig', models.IntegerField()),
                ('canopy_sn', models.CharField(max_length=45)),
                ('container_sn', models.CharField(max_length=45)),
                ('deployment_timestamp', models.DateTimeField()),
                ('aad_sn', models.CharField(max_length=45)),
                ('lifespan', models.CharField(max_length=45)),
                ('is_rentable', models.BooleanField(max_length=4)),
                ('is_on_rig', models.BooleanField(max_length=4)),
                ('is_available', models.BooleanField(max_length=4)),
                ('manufacturer', models.CharField(max_length=45)),
                ('brand', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=45)),
                ('date_of_manufacture', models.DateTimeField()),
                ('size', models.CharField(max_length=45)),
                ('next_repack_date', models.DateTimeField()),
                ('jump_count', models.IntegerField()),
                ('ride_count', models.IntegerField()),
                ('packed_by_employee_id', models.IntegerField()),
            ],
            options={
                'db_table': 'all_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Claims',
            fields=[
                ('claim_id', models.AutoField(primary_key=True, serialize=False)),
                ('rig_id', models.IntegerField()),
                ('severity', models.CharField(choices=[('CRITICAL', 'Critical'), ('NON-CRITICAL', 'Non-critical'), ('COSMETIC', 'Cosmetic')], max_length=12)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN-PROGRESS', 'In-Progress'), ('COMPLETE', 'Complete'), ('DISMISSED', 'Dismissed')], max_length=12)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('submit_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('complete_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'claims',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeRoles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'employee_roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeRolesPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeRole', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.EmployeeRoles')),
            ],
            options={
                'db_table': 'EmployeeRolesPermissions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('email', models.EmailField(max_length=254)),
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(max_length=4)),
                ('pin', models.CharField(blank=True, max_length=45)),
                ('employment_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'employees',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeesEmployeeRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'employees_employee_roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeesSignouts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packed_signout', models.CharField(choices=[('PACKED', 'packed'), ('SIGNOUT', 'signout')], db_column='packed_or_signout', max_length=7)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'employees_signouts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeesVsSignouts',
            fields=[
                ('signout_id', models.AutoField(primary_key=True, serialize=False)),
                ('jumpmaster', models.CharField(max_length=90)),
                ('jumpmaster_id', models.IntegerField()),
                ('load_number', models.IntegerField()),
                ('rig_id', models.IntegerField()),
                ('packed_by', models.CharField(blank=True, max_length=90, null=True)),
                ('packer_id', models.IntegerField()),
            ],
            options={
                'db_table': 'all_employees_vs_signouts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeesVsSignoutsStudent',
            fields=[
                ('signout_id', models.AutoField(primary_key=True, serialize=False)),
                ('jumpmaster', models.CharField(max_length=90)),
                ('jumpmaster_id', models.IntegerField()),
                ('load_number', models.IntegerField()),
                ('rig_id', models.IntegerField()),
                ('packed_by', models.CharField(blank=True, max_length=90, null=True)),
                ('packer_id', models.IntegerField()),
            ],
            options={
                'db_table': 'employees_vs_signouts_student',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeesVsSignoutsTandem',
            fields=[
                ('signout_id', models.AutoField(primary_key=True, serialize=False)),
                ('jumpmaster', models.CharField(max_length=90)),
                ('jumpmaster_id', models.IntegerField()),
                ('load_number', models.IntegerField()),
                ('rig_id', models.IntegerField()),
                ('packed_by', models.CharField(blank=True, max_length=90, null=True)),
                ('packer_id', models.IntegerField()),
            ],
            options={
                'db_table': 'employees_vs_signouts_tandem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('brand', models.CharField(blank=True, max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('is_rentable', models.BooleanField(max_length=4)),
                ('is_on_rig', models.BooleanField(max_length=4)),
                ('is_available', models.BooleanField(max_length=4)),
            ],
            options={
                'db_table': 'items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsRentals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'items_rentals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemTypes',
            fields=[
                ('item_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=45, null=True, unique=True)),
            ],
            options={
                'db_table': 'item_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(max_length=45)),
                ('auth_level', models.IntegerField(choices=[('Packer', '0'), ('Instructor', '1'), ('Rigger', '2'), ('Admin', '3')])),
            ],
            options={
                'db_table': 'permissions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rentals',
            fields=[
                ('rental_id', models.AutoField(primary_key=True, serialize=False)),
                ('renter_name', models.CharField(max_length=45)),
                ('rental_date', models.DateTimeField()),
                ('returned_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rentals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RigComponentDetails',
            fields=[
                ('rig_id', models.IntegerField(primary_key=True, serialize=False)),
                ('main_canopy_size', models.CharField(max_length=45)),
                ('main_canopy_brand', models.CharField(max_length=45)),
                ('reserve_canopy_size', models.CharField(max_length=45)),
                ('reserve_canopy_brand', models.CharField(max_length=45)),
                ('container_brand', models.CharField(max_length=45)),
                ('aad_lifespan', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'rig_component_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RigsAuditTrail',
            fields=[
                ('rig_audit_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField()),
                ('rig_id', models.IntegerField()),
                ('container_id', models.IntegerField()),
                ('aad_id', models.IntegerField()),
                ('date_of_change', models.DateTimeField()),
            ],
            options={
                'db_table': 'rigs_audit_trail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Signouts',
            fields=[
                ('signout_id', models.AutoField(primary_key=True, serialize=False)),
                ('load_number', models.IntegerField()),
            ],
            options={
                'db_table': 'signouts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TempUrl',
            fields=[
                ('Url', models.CharField(max_length=45, primary_key=True, serialize=False, unique=True)),
                ('Expries', models.DateTimeField()),
            ],
            options={
                'db_table': 'tempurl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dropzones',
            fields=[
            ],
            options={
                'db_table': 'dropzones',
                'managed': True,
                'proxy': True,
                'indexes': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AutomaticActivationDevices',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dropZoneHQ.Items')),
                ('deployment_timestamp', models.DateTimeField()),
                ('serial_number', models.CharField(max_length=45)),
                ('lifespan', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'automatic_activation_devices',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Canopies',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dropZoneHQ.Items')),
                ('serial_number', models.CharField(blank=True, max_length=45, null=True)),
                ('size', models.CharField(blank=True, max_length=45, null=True)),
                ('date_of_manufacture', models.DateTimeField(blank=True, null=True)),
                ('jump_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'canopies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Containers',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dropZoneHQ.Items')),
                ('serial_number', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'containers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeesRentals',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dropZoneHQ.Employees')),
            ],
            options={
                'db_table': 'employees_rentals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rigs',
            fields=[
                ('rig_id', models.AutoField(auto_created=True, unique=True, primary_key=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, serialize=False, to='dropZoneHQ.Items')),
                ('istandem', models.CharField(db_column='isTandem', max_length=4)),
                ('aad', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.AutomaticActivationDevices')),
                ('container', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Containers')),
            ],
            options={
                'db_table': 'rigs',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='tempurl',
            name='dropzone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dropZoneHQ.Dropzones'),
        ),
        migrations.AddField(
            model_name='signouts',
            name='employees',
            field=models.ManyToManyField(through='dropZoneHQ.EmployeesSignouts', to='dropZoneHQ.Employees'),
        ),
        migrations.AddField(
            model_name='rentals',
            name='item',
            field=models.ManyToManyField(through='dropZoneHQ.ItemsRentals', to='dropZoneHQ.Items'),
        ),
        migrations.AddField(
            model_name='itemsrentals',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Items'),
        ),
        migrations.AddField(
            model_name='itemsrentals',
            name='rental',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Rentals'),
        ),
        migrations.AddField(
            model_name='items',
            name='item_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.ItemTypes'),
        ),
        migrations.AddField(
            model_name='items',
            name='rentals',
            field=models.ManyToManyField(through='dropZoneHQ.ItemsRentals', to='dropZoneHQ.Rentals'),
        ),
        migrations.AddField(
            model_name='employeessignouts',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Employees'),
        ),
        migrations.AddField(
            model_name='employeessignouts',
            name='signout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Signouts'),
        ),
        migrations.AddField(
            model_name='employeesemployeeroles',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Employees'),
        ),
        migrations.AddField(
            model_name='employeesemployeeroles',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.EmployeeRoles'),
        ),
        migrations.AddField(
            model_name='employees',
            name='dropzone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Dropzones'),
        ),
        migrations.AddField(
            model_name='employees',
            name='roles',
            field=models.ManyToManyField(through='dropZoneHQ.EmployeesEmployeeRoles', to='dropZoneHQ.EmployeeRoles'),
        ),
        migrations.AddField(
            model_name='employeerolespermissions',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Permissions'),
        ),
        migrations.AddField(
            model_name='claims',
            name='handler',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Employees'),
        ),
        migrations.AddField(
            model_name='claims',
            name='submitter',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Employees'),
        ),
        migrations.CreateModel(
            name='ReserveCanopies',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dropZoneHQ.Canopies')),
                ('last_repack_date', models.DateTimeField()),
                ('next_repack_date', models.DateTimeField()),
                ('ride_count', models.IntegerField(blank=True, null=True)),
                ('packed_by_employee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Employees')),
            ],
            options={
                'db_table': 'reserve_canopies',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='signouts',
            name='rig',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Rigs'),
        ),
        migrations.AddField(
            model_name='rentals',
            name='employee',
            field=models.ManyToManyField(through='dropZoneHQ.EmployeesRentals', to='dropZoneHQ.Employees'),
        ),
        migrations.AlterUniqueTogether(
            name='itemsrentals',
            unique_together=set([('item', 'rental')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeessignouts',
            unique_together=set([('employee', 'signout')]),
        ),
        migrations.AddField(
            model_name='employeesrentals',
            name='rental',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Rentals'),
        ),
        migrations.AlterUniqueTogether(
            name='employeesemployeeroles',
            unique_together=set([('employee', 'role')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeerolespermissions',
            unique_together=set([('employeeRole', 'permission')]),
        ),
        migrations.AddField(
            model_name='canopies',
            name='rig',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Rigs'),
        ),
        migrations.AddField(
            model_name='allcanopies',
            name='rig',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dropZoneHQ.Rigs'),
        ),
        migrations.AlterUniqueTogether(
            name='employeesrentals',
            unique_together=set([('employee', 'rental')]),
        ),
    ]
